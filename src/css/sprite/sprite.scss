/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$ico-128-name: 'ico-128';
$ico-128-x: 0px;
$ico-128-y: 0px;
$ico-128-offset-x: 0px;
$ico-128-offset-y: 0px;
$ico-128-width: 128px;
$ico-128-height: 128px;
$ico-128-total-width: 196px;
$ico-128-total-height: 164px;
$ico-128-image: 'sprite.png';
$ico-128: (0px, 0px, 0px, 0px, 128px, 128px, 196px, 164px, 'sprite.png', 'ico-128', );
$ico-32-name: 'ico-32';
$ico-32-x: 0px;
$ico-32-y: 132px;
$ico-32-offset-x: 0px;
$ico-32-offset-y: -132px;
$ico-32-width: 32px;
$ico-32-height: 32px;
$ico-32-total-width: 196px;
$ico-32-total-height: 164px;
$ico-32-image: 'sprite.png';
$ico-32: (0px, 132px, 0px, -132px, 32px, 32px, 196px, 164px, 'sprite.png', 'ico-32', );
$ico-48-name: 'ico-48';
$ico-48-x: 132px;
$ico-48-y: 68px;
$ico-48-offset-x: -132px;
$ico-48-offset-y: -68px;
$ico-48-width: 48px;
$ico-48-height: 48px;
$ico-48-total-width: 196px;
$ico-48-total-height: 164px;
$ico-48-image: 'sprite.png';
$ico-48: (132px, 68px, -132px, -68px, 48px, 48px, 196px, 164px, 'sprite.png', 'ico-48', );
$ico-64-name: 'ico-64';
$ico-64-x: 132px;
$ico-64-y: 0px;
$ico-64-offset-x: -132px;
$ico-64-offset-y: 0px;
$ico-64-width: 64px;
$ico-64-height: 64px;
$ico-64-total-width: 196px;
$ico-64-total-height: 164px;
$ico-64-image: 'sprite.png';
$ico-64: (132px, 0px, -132px, 0px, 64px, 64px, 196px, 164px, 'sprite.png', 'ico-64', );
$spritesheet-width: 196px;
$spritesheet-height: 164px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($ico-128, $ico-32, $ico-48, $ico-64, );
$spritesheet: (196px, 164px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
